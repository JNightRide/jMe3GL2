/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java library project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/8.0-rc-1/userguide/building_java_projects.html
 */

plugins {
    // Apply the java-library plugin for API and implementation separation.
    id 'java-library'
}

group 'jMe3GL2'
version '2.5-SNAPSHOT'

project.ext {
    jmeVer = '3.6.1-stable'
    dyn4jVer = '5.0.0'
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // Use JUnit Jupiter for testing.
    testImplementation 'org.junit.jupiter:junit-jupiter:5.9.1'

    // This dependency is exported to consumers, that is to say found on their compile classpath.
    api 'org.apache.commons:commons-math3:3.6.1'

    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    implementation 'com.google.guava:guava:31.1-jre'

    // Implementation of the jme3 library and the dyn4j engine
    implementation 'org.jmonkeyengine:jme3-core:' + jmeVer
    implementation 'org.jmonkeyengine:jme3-desktop:' + jmeVer
    runtimeOnly 'org.jmonkeyengine:jme3-lwjgl3:' + jmeVer

    implementation 'org.dyn4j:dyn4j:' + dyn4jVer
}

java {
    withJavadocJar()
    withSourcesJar()
}

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}

task myJavadocs(type: Javadoc) {
  source = sourceSets.main.allJava
}
